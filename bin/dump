#!/usr/bin/ruby
#
# dump.rb
#
# Hexdump RD file
#
# Usage:
#   dump.rb                  # Reads from stdin
#   dump.rb <rd-file1> ...   # Reads from file(s)
#

$:.push(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'ruida'

class Dump
  def initialize path=nil, magic=nil
    @magic = magic
    if path
      raise "Empty path" if path.empty?
      @path = path
      @file = File.open(path, 'r')
      raise "Can't open #{path}" unless path
    else
      @file = STDIN
      STDERR.puts "Reading from stdin"
    end
    @file.binmode
  end
  def dump_pos to, pos
    to.printf "\n%05x: ", pos
  end
  def dump to=STDOUT
    data = Ruida::Data.new @file.read, @magic
    dump_pos to, data.pos
    data.each do |c|
      pos = data.pos
      if pos % 16 == 0
        dump_pos to, pos
      end
      to.printf "%02x ", c
    end
    to.printf "\n"
  end
end

magic = nil

if ARGV.size == 0
  dis = Dump.new
  dis.dump
else
  ARGV.each do |path|
    if path == "-88"
      magic = 0x88
      next
    end
    dis = Dump.new path, magic
    dis.dump
  end
end
